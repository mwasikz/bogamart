"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toStyledComponent = void 0;
const types_1 = require("@babel/types");
function toStyledComponent(path) {
    const openingElement = path.node.openingElement;
    openingElement.attributes.push((0, types_1.jSXAttribute)((0, types_1.jSXIdentifier)("component"), (0, types_1.jsxExpressionContainer)(jsxVariableToJsVariable(openingElement.name))));
    openingElement.name = (0, types_1.jsxIdentifier)("StyledComponent");
    if (path.node.closingElement) {
        path.node.closingElement.name = (0, types_1.jsxIdentifier)("StyledComponent");
    }
    return true;
}
exports.toStyledComponent = toStyledComponent;
function jsxVariableToJsVariable(name) {
    if ((0, types_1.isJSXIdentifier)(name)) {
        return (0, types_1.identifier)(name.name);
    }
    else if ((0, types_1.isJSXMemberExpression)(name)) {
        return (0, types_1.memberExpression)(jsxVariableToJsVariable(name.object), jsxVariableToJsVariable(name.property));
    }
    else {
        // ReactJSX does not support namespaced names
        //
        // https://github.com/facebook/react/issues/11321
        // https://github.com/babel/babel/blob/e498bee10f0123bb208baa228ce6417542a2c3c4/packages/babel-helper-builder-react-jsx/src/index.js#L15-L22
        throw new Error("Namespace tags are not supported by default. React's JSX doesn't support namespace tags.");
    }
}
