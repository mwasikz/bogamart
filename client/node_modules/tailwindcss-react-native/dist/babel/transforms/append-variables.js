"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appendVariables = void 0;
const types_1 = require("@babel/types");
const serialize_styles_1 = require("../../utils/serialize-styles");
function appendVariables(body, styleRecord) {
    const { styles, media } = (0, serialize_styles_1.serializeStyles)(styleRecord);
    body.push((0, types_1.expressionStatement)((0, types_1.assignmentExpression)("=", (0, types_1.memberExpression)((0, types_1.identifier)("globalThis"), (0, types_1.identifier)("tailwindcss_react_native_style")), (0, types_1.callExpression)((0, types_1.memberExpression)((0, types_1.identifier)("Object"), (0, types_1.identifier)("assign")), [
        (0, types_1.logicalExpression)("||", (0, types_1.memberExpression)((0, types_1.identifier)("globalThis"), (0, types_1.identifier)("tailwindcss_react_native_style")), (0, types_1.identifier)("{}")),
        (0, types_1.callExpression)((0, types_1.memberExpression)((0, types_1.identifier)("RNStyleSheet"), (0, types_1.identifier)("create")), [serialize(styles)]),
    ]))), (0, types_1.expressionStatement)((0, types_1.assignmentExpression)("=", (0, types_1.memberExpression)((0, types_1.identifier)("globalThis"), (0, types_1.identifier)("tailwindcss_react_native_media")), (0, types_1.callExpression)((0, types_1.memberExpression)((0, types_1.identifier)("Object"), (0, types_1.identifier)("assign")), [
        (0, types_1.logicalExpression)("||", (0, types_1.memberExpression)((0, types_1.identifier)("globalThis"), (0, types_1.identifier)("tailwindcss_react_native_media")), (0, types_1.identifier)("{}")),
        serialize(media),
    ]))));
}
exports.appendVariables = appendVariables;
function serialize(literal) {
    if (literal === null) {
        return (0, types_1.nullLiteral)();
    }
    switch (typeof literal) {
        case "number":
            return (0, types_1.numericLiteral)(literal);
        case "string":
            if (literal === "hairlineWidth") {
                return (0, types_1.memberExpression)((0, types_1.identifier)("RNStyleSheet"), (0, types_1.identifier)("hairlineWidth"));
            }
            return (0, types_1.stringLiteral)(literal);
        case "boolean":
            return (0, types_1.booleanLiteral)(literal);
        case "undefined":
            return (0, types_1.unaryExpression)("void", (0, types_1.numericLiteral)(0), true);
        default:
            if (Array.isArray(literal)) {
                return (0, types_1.arrayExpression)(literal.map((n) => serialize(n)));
            }
            if (isObject(literal)) {
                return (0, types_1.objectExpression)(Object.keys(literal)
                    .filter((k) => {
                    return typeof literal[k] !== "undefined";
                })
                    .map((k) => {
                    return (0, types_1.objectProperty)((0, types_1.stringLiteral)(k), serialize(literal[k]));
                }));
            }
            throw new Error("unserializable literal");
    }
}
function isObject(literal) {
    return typeof literal === "object";
}
