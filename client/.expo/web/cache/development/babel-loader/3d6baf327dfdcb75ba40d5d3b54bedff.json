{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { BaseNavigationContainer, getActionFromState, getPathFromState, getStateFromPath, validatePathConfig } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from \"./LinkingContext\";\nimport DefaultTheme from \"./theming/DefaultTheme\";\nimport ThemeProvider from \"./theming/ThemeProvider\";\nimport useBackButton from \"./useBackButton\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport useLinking from \"./useLinking\";\nimport useThenable from \"./useThenable\";\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\nfunction NavigationContainerInner(_ref, ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? DefaultTheme : _ref$theme,\n      linking = _ref.linking,\n      _ref$fallback = _ref.fallback,\n      fallback = _ref$fallback === void 0 ? null : _ref$fallback,\n      documentTitle = _ref.documentTitle,\n      onReady = _ref.onReady,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking !== null && linking !== void 0 && linking.config) {\n    validatePathConfig(linking.config);\n  }\n\n  var refContainer = React.useRef(null);\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  var _useLinking = useLinking(refContainer, _objectSpread({\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: []\n  }, linking)),\n      getInitialState = _useLinking.getInitialState;\n\n  React.useEffect(function () {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          var _linking$prefixes, _linking$getStateFrom, _linking$getPathFromS, _linking$getActionFro;\n\n          return _objectSpread(_objectSpread({}, linking), {}, {\n            enabled: isLinkingEnabled,\n            prefixes: (_linking$prefixes = linking === null || linking === void 0 ? void 0 : linking.prefixes) !== null && _linking$prefixes !== void 0 ? _linking$prefixes : [],\n            getStateFromPath: (_linking$getStateFrom = linking === null || linking === void 0 ? void 0 : linking.getStateFromPath) !== null && _linking$getStateFrom !== void 0 ? _linking$getStateFrom : getStateFromPath,\n            getPathFromState: (_linking$getPathFromS = linking === null || linking === void 0 ? void 0 : linking.getPathFromState) !== null && _linking$getPathFromS !== void 0 ? _linking$getPathFromS : getPathFromState,\n            getActionFromState: (_linking$getActionFro = linking === null || linking === void 0 ? void 0 : linking.getActionFromState) !== null && _linking$getActionFro !== void 0 ? _linking$getActionFro : getActionFromState\n          });\n        }\n\n      });\n    }\n  });\n\n  var _useThenable = useThenable(getInitialState),\n      _useThenable2 = _slicedToArray(_useThenable, 2),\n      isResolved = _useThenable2[0],\n      initialState = _useThenable2[1];\n\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  var linkingContext = React.useMemo(function () {\n    return {\n      options: linking\n    };\n  }, [linking]);\n  var isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  var onReadyRef = React.useRef(onReady);\n  React.useEffect(function () {\n    onReadyRef.current = onReady;\n  });\n  React.useEffect(function () {\n    if (isReady) {\n      var _onReadyRef$current;\n\n      (_onReadyRef$current = onReadyRef.current) === null || _onReadyRef$current === void 0 ? void 0 : _onReadyRef$current.call(onReadyRef);\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return fallback;\n  }\n\n  return React.createElement(LinkingContext.Provider, {\n    value: linkingContext\n  }, React.createElement(ThemeProvider, {\n    value: theme\n  }, React.createElement(BaseNavigationContainer, _extends({}, rest, {\n    initialState: rest.initialState == null ? initialState : rest.initialState,\n    ref: refContainer\n  }))));\n}\n\nvar NavigationContainer = React.forwardRef(NavigationContainerInner);\nexport default NavigationContainer;","map":{"version":3,"mappings":"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","names":["BaseNavigationContainer","getActionFromState","getPathFromState","getStateFromPath","validatePathConfig","React","LinkingContext","DefaultTheme","ThemeProvider","useBackButton","useDocumentTitle","useLinking","useThenable","global","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","ref","theme","linking","fallback","documentTitle","onReady","rest","isLinkingEnabled","enabled","config","refContainer","useRef","independent","prefixes","getInitialState","useEffect","current","set","isResolved","initialState","useImperativeHandle","linkingContext","useMemo","options","isReady","onReadyRef","Provider","value","NavigationContainer","forwardRef"],"sources":["NavigationContainer.tsx"],"sourcesContent":["import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}