{"ast":null,"code":"var _window$document;\n\nexport var isDOMAvailable = typeof window !== 'undefined' && !!((_window$document = window.document) != null && _window$document.createElement);\nexport var canUseEventListeners = isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport var canUseViewport = isDOMAvailable && !!window.screen;\nexport var isAsyncDebugging = false;","map":{"version":3,"mappings":";;AASA,OAAO,IAAMA,cAAc,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAAC,sBAACA,MAAM,CAACC,QAAR,aAAC,iBAAiBC,aAAlB,CAAzD;AACP,OAAO,IAAMC,oBAAoB,GAC/BJ,cAAc,IAAI,CAAC,EAAEC,MAAM,CAACI,gBAAP,IAA2BJ,MAAM,CAACK,WAApC,CADd;AAEP,OAAO,IAAMC,cAAc,GAAGP,cAAc,IAAI,CAAC,CAACC,MAAM,CAACO,MAAlD;AACP,OAAO,IAAMC,gBAAgB,GAAG,KAAzB","names":["isDOMAvailable","window","document","createElement","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isAsyncDebugging"],"sourceRoot":"","sources":["../../src/environment/browser.web.ts"],"sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n"]},"metadata":{},"sourceType":"module"}