{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport CategoryCard from \"./CategoryCard\";\nimport sanityClient, { urlFor } from \"../sanity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Categories = function Categories() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  useEffect(function () {\n    sanityClient.fetch(\"\\n      *[_type == \\\"category\\\"]\\n    \").then(function (data) {\n      setCategories(data);\n    }).catch(function (err) {\n      console.log(\"Err from category:\", err);\n    });\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      paddingHorizontal: 15,\n      paddingTop: 10\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    children: categories == null ? void 0 : categories.map(function (category) {\n      return _jsx(CategoryCard, {\n        imgUrl: urlFor(category.image).width(200).url(),\n        title: category.name\n      }, category._id);\n    })\n  });\n};\n\nexport default Categories;","map":{"version":3,"names":["React","useEffect","useState","CategoryCard","sanityClient","urlFor","Categories","categories","setCategories","fetch","then","data","catch","err","console","log","paddingHorizontal","paddingTop","map","category","image","width","url","name","_id"],"sources":["C:/xampp/htdocs/Projects/bogafood/bogafood/client/components/Categories.js"],"sourcesContent":["import { View, Text, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport CategoryCard from './CategoryCard'\r\nimport sanityClient, { urlFor } from '../sanity';\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        sanityClient\r\n            .fetch(\r\n                `\r\n      *[_type == \"category\"]\r\n    `\r\n            )\r\n            .then((data) => {\r\n                setCategories(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Err from category:\", err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView\r\n            contentContainerStyle={{\r\n                paddingHorizontal: 15,\r\n                paddingTop: 10,\r\n            }}\r\n            horizontal\r\n            showsHorizontalScrollIndicator={false}\r\n        >\r\n\r\n            {/* Category Card */}\r\n\r\n            {categories?.map((category) => (\r\n                <CategoryCard\r\n                    key={category._id}\r\n                    imgUrl={urlFor(category.image).width(200).url()}\r\n                    title={category.name}\r\n                />\r\n            ))}\r\n\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Categories"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP,IAAuBC,MAAvB;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAAoCJ,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOK,UAAP;EAAA,IAAmBC,aAAnB;;EAEAP,SAAS,CAAC,YAAM;IACZG,YAAY,CACPK,KADL,2CAMKC,IANL,CAMU,UAACC,IAAD,EAAU;MACZH,aAAa,CAACG,IAAD,CAAb;IACH,CARL,EASKC,KATL,CASW,UAACC,GAAD,EAAS;MACZC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;IACH,CAXL;EAYH,CAbQ,EAaN,EAbM,CAAT;EAeA,OACI,KAAC,UAAD;IACI,qBAAqB,EAAE;MACnBG,iBAAiB,EAAE,EADA;MAEnBC,UAAU,EAAE;IAFO,CAD3B;IAKI,UAAU,MALd;IAMI,8BAA8B,EAAE,KANpC;IAAA,UAWKV,UAXL,oBAWKA,UAAU,CAAEW,GAAZ,CAAgB,UAACC,QAAD;MAAA,OACb,KAAC,YAAD;QAEI,MAAM,EAAEd,MAAM,CAACc,QAAQ,CAACC,KAAV,CAAN,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,EAFZ;QAGI,KAAK,EAAEH,QAAQ,CAACI;MAHpB,GACSJ,QAAQ,CAACK,GADlB,CADa;IAAA,CAAhB;EAXL,EADJ;AAsBH,CAxCD;;AA0CA,eAAelB,UAAf"},"metadata":{},"sourceType":"module"}