{"ast":null,"code":"import { EventEmitter } from \"../EventEmitter\";\nimport Platform from \"../Platform\";\nimport NativeErrorManager from \"./NativeErrorManager\";\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  var eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, function (_ref) {\n    var message = _ref.message;\n    console.error(message);\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT;AACA,OAAOC,QAAP;AACA,OAAOC,kBAAP;;AAEA,IAAIC,OAAO,IAAIF,QAAQ,CAACG,EAAT,KAAgB,SAA3B,IAAwCF,kBAA5C,EAAgE;EAC9D,IAAMG,cAAc,GAAG,4CAAvB;EACA,IAAMC,YAAY,GAAG,IAAIN,YAAJ,CAAiBE,kBAAjB,CAArB;EAEAI,YAAY,CAACC,WAAb,CAAyBF,cAAzB,EAAyC,gBAAqC;IAAA,IAAlCG,OAAkC,QAAlCA,OAAkC;IAC5EC,OAAO,CAACC,KAAR,CAAcF,OAAd;EACD,CAFD;AAGD","names":["EventEmitter","Platform","NativeErrorManager","__DEV__","OS","onNewException","eventEmitter","addListener","message","console","error"],"sourceRoot":"","sources":["../../src/sweet/setUpErrorManager.fx.ts"],"sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}