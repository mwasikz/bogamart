{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from \"./CurrentRenderContext\";\nexport default function useCurrentRender(_ref) {\n  var state = _ref.state,\n      navigation = _ref.navigation,\n      descriptors = _ref.descriptors;\n  var current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,oBAAP;AAqBA,eAAe,SAASC,gBAAT,OAIH;EAAA,IAHVC,KAGU,QAHVA,KAGU;EAAA,IAFVC,UAEU,QAFVA,UAEU;EAAA,IADVC,WACU,QADVA,WACU;EACV,IAAMC,OAAO,GAAGN,KAAK,CAACO,UAANP,CAAiBC,oBAAjBD,CAAhB;;EAEA,IAAIM,OAAO,IAAIF,UAAU,CAACI,SAAXJ,EAAf,EAAuC;IACrCE,OAAO,CAACG,OAARH,GAAkBD,WAAW,CAACF,KAAK,CAACO,MAANP,CAAaA,KAAK,CAACQ,KAAnBR,EAA0BS,GAA3B,CAAXP,CAA2CI,OAA7DH;EACD;AACF","names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"sources":["useCurrentRender.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}